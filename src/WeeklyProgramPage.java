
 
import java.awt.Dimension;
import java.awt.Toolkit;
import java.awt.Window;
import java.sql.Connection;
import java.sql.Statement;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.sql.CallableStatement;
import java.sql.ResultSet;
import java.sql.Types;
 
 
 
public class WeeklyProgramPage extends javax.swing.JFrame {
  
    
    static String driverClassName="oracle.jdbc.OracleDriver";
    static String url = "jdbc:oracle:thin:@192.168.6.21:1521/dblabs";
    static Connection dbConnection = null;
    static String username = "it175093";
    static String passwd = "Powerteam1515";
    static Statement statement =null; 
    static ResultSet rs   = null;
    static PreparedStatement insertValues = null;
    int dayCell;
    int timezoneNumber;
    
    
    public void setValue(String value,int x,int y)
    {
       
        weekTable.setValueAt(value, x, y);
    
    }
    
      
    
    public WeeklyProgramPage() {
        
      
         
        initComponents();
        centreWindow(this);
        tablelist();
        
    }

    void tablelist()
    {
        
              
                try{
                   
             
                     dbConnection= DriverManager.getConnection(url,username,passwd);  
                     statement = dbConnection.createStatement();
                   
                     String selectString ="select * from scheduled";
                     
                     
                     rs=statement.executeQuery(selectString);
                        
                       
                       
                      
                      
                       
                        while(rs.next())
                           {
                           String day2 = rs.getString("DAY2");
                           String timezone2 = rs.getString("TIMEZONE2");
                           String movie2 = rs.getString("MOVIE2");
                                switch (day2)
                                {
                                    case "Monday": dayCell =1;
                                        
                                    break;
                                    case "Tuesday": dayCell =2;
                                        
                                    break;
                                    case "Wednesday": dayCell =3;
                                        
                                    break;
                                    case "Thursday": dayCell =4;
                                        
                                    break;
                                    case "Friday": dayCell =5;
                                        
                                    break;
                                    case "Saturday": dayCell =6;
  
                                    break;
                                    
                                    case "Sunday": dayCell =7;
                                        
                                    break;

                                   default:

                                       break;                                      
                                }
                                
                                timezoneNumber= Integer.parseInt(timezone2);
                                if (timezoneNumber>=12)
                                {
                                    timezoneNumber= timezoneNumber-12;
                                }else
                                {
                                    timezoneNumber= timezoneNumber+12;
                                }   
                                    
                                System.out.println(dayCell);
                                
                       setValue(movie2,timezoneNumber ,dayCell); 
                            
                           }
                       
                       
                        
                      statement.close();
                      dbConnection.close();
                         
         } catch(SQLException ex) 
         {
            System.out.print("\n -- SQL Exception -- \n" + ex.getMessage());
            ex=ex.getNextException();         
         }
         
    
                                           
        
    
    
    
    }
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        BackToMenu = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        weekTable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setFocusCycleRoot(true);

        BackToMenu.setText("Main Menu");
        BackToMenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BackToMenuActionPerformed(evt);
            }
        });

        weekTable.setAutoCreateRowSorter(true);
        weekTable.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        weekTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {"12:00", null, null, null, "", null, null, null},
                {"13:00", null, "", null, null, null, null, null},
                {"14:00", null, null, null, null, null, null, null},
                {"15:00", null, null, null, null, null, null, null},
                {"16:00", null, null, null, null, null, null, null},
                {"17:00", null, null, null, null, null, null, null},
                {"18:00", null, null, null, null, null, null, null},
                {"19:00", null, null, null, null, null, null, null},
                {"20:00", null, null, null, null, null, null, null},
                {"21:00", null, null, null, null, null, null, null},
                {"22:00", null, null, null, null, null, null, null},
                {"23:00", null, null, null, null, null, null, null},
                {"24:00", null, null, null, null, null, null, null},
                {"01:00", null, null, null, null, null, null, null},
                {"02:00", null, null, null, null, null, null, null},
                {"03:00", null, null, null, null, null, null, null},
                {"04:00", null, null, null, null, null, null, null},
                {"05:00", null, null, null, null, null, null, null},
                {"06:00", null, null, null, null, null, null, null},
                {"07:00", null, null, null, null, null, null, null},
                {"08:00", null, null, null, null, null, null, null},
                {"09:00", null, null, null, null, null, null, null},
                {"10:00", null, null, null, null, null, null, null},
                {"11:00", null, null, null, null, null, null, null}
            },
            new String [] {
                "", "Monday", "Tuesday", "Wednesday", "Thirsday", "Friday", "Saturday", "Sunday"
            }
        ));
        weekTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_NEXT_COLUMN);
        weekTable.setAutoscrolls(false);
        weekTable.setFocusCycleRoot(true);
        weekTable.setGridColor(new java.awt.Color(51, 0, 51));
        weekTable.setRequestFocusEnabled(false);
        weekTable.setRowHeight(90);
        weekTable.setRowSelectionAllowed(false);
        weekTable.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        weekTable.setShowGrid(true);
        weekTable.getTableHeader().setReorderingAllowed(false);
        weekTable.setVerifyInputWhenFocusTarget(false);
        jScrollPane2.setViewportView(weekTable);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(BackToMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(82, 726, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 856, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(9, 9, 9)
                .addComponent(BackToMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 670, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void BackToMenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BackToMenuActionPerformed
        this.hide();
        MainMenu StartPage = new MainMenu();
        StartPage.setVisible(true);
            
        
    }//GEN-LAST:event_BackToMenuActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
      
         
         
         
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                
                new NewCustomerMenu().setVisible(true);
            }
        });
    }
 public static void centreWindow(Window frame) {
         Dimension dimension = Toolkit.getDefaultToolkit().getScreenSize();  
    int x = (int) ((dimension.getWidth() - frame.getWidth()) / 2);
    int y = (int) ((dimension.getHeight() - frame.getHeight()) / 2);
    frame.setLocation(x, y);
        } 
 
 
 
 
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BackToMenu;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable weekTable;
    // End of variables declaration//GEN-END:variables

    
         
 
               

}
